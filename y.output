State 25 conflicts: 1 reduce/reduce
State 26 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    2 identifier_list: ID
    3                | identifier_list ',' ID

    4 declarations: declarations VAR identifier_list ':' type ';'
    5             | empty

    6 type: standard_type
    7     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

    8 standard_type: INTEGER
    9              | REAL

   10 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   11                        | empty

   12 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   13 subprogram_head: FUNCTION ID arguments ':' standard_type ';'
   14                | PROCEDURE ID arguments ';'

   15 arguments: %empty
   16          | '(' parameter_list ')'
   17          | empty

   18 parameter_list: identifier_list ':' type
   19               | parameter_list ';' identifier_list ':' type

   20 compound_statement: BEGIN optional_statements END

   21 optional_statements: statement_list
   22                    | empty

   23 statement_list: statement
   24               | statement_list ';' statement

   25 statement: variable ASSIGNOP expression
   26          | procedure_statement
   27          | compound_statement
   28          | IF expression THEN statement ELSE statement
   29          | WHILE expression DO statement
   30          | FOR variable ASSIGNOP expression TO expression DO statement

   31 variable: ID
   32         | ID '[' expression ']'

   33 procedure_statement: ID
   34                    | ID '(' expression_list ')'

   35 expression_list: expression
   36                | expression_list ',' expression

   37 expression: simple_expression
   38           | simple_expression RELOP simple_expression

   39 simple_expression: term
   40                  | ADDOP term
   41                  | simple_expression ADDOP term

   42 term: factor
   43     | term MULOP factor

   44 factor: ID
   45       | ID '(' expression_list ')'
   46       | ID '[' expression ']'
   47       | INUM
   48       | RNUM
   49       | '(' expression ')'
   50       | NOT factor

   51 empty: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1 16 34 45 49
')' (41) 1 16 34 45 49
',' (44) 3 36
'.' (46) 1
':' (58) 4 13 18 19
';' (59) 1 4 10 13 14 19 24
'[' (91) 7 32 46
']' (93) 7 32 46
error (256)
PROGRAM (258) 1
VAR (259) 4
ARRAY (260) 7
OF (261) 7
INTEGER (262) 8
REAL (263) 9
FUNCTION (264) 13
PROCEDURE (265) 14
BEGIN (266) 20
END (267) 20
ASSIGNOP (268) 25 30
IF (269) 28
THEN (270) 28
ELSE (271) 28
WHILE (272) 29
FOR (273) 30
DO (274) 29 30
TO (275) 30
RELOP (276) 38
ADDOP (277) 40 41
MULOP (278) 43
NOT (279) 50
DOTDOT (280) 7
ID (281) 1 2 3 13 14 31 32 33 34 44 45 46
INUM (282) 7 47
RNUM (283) 48


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
identifier_list (39)
    on left: 2 3, on right: 1 3 4 18 19
declarations (40)
    on left: 4 5, on right: 1 4 12
type (41)
    on left: 6 7, on right: 4 18 19
standard_type (42)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (43)
    on left: 10 11, on right: 1 10 12
subprogram_declaration (44)
    on left: 12, on right: 10
subprogram_head (45)
    on left: 13 14, on right: 12
arguments (46)
    on left: 15 16 17, on right: 13 14
parameter_list (47)
    on left: 18 19, on right: 16 19
compound_statement (48)
    on left: 20, on right: 1 12 27
optional_statements (49)
    on left: 21 22, on right: 20
statement_list (50)
    on left: 23 24, on right: 21 24
statement (51)
    on left: 25 26 27 28 29 30, on right: 23 24 28 29 30
variable (52)
    on left: 31 32, on right: 25 30
procedure_statement (53)
    on left: 33 34, on right: 26
expression_list (54)
    on left: 35 36, on right: 34 36 45
expression (55)
    on left: 37 38, on right: 25 28 29 30 32 35 36 46 49
simple_expression (56)
    on left: 39 40 41, on right: 37 38 41
term (57)
    on left: 42 43, on right: 39 40 41 43
factor (58)
    on left: 44 45 46 47 48 49 50, on right: 42 43 50
empty (59)
    on left: 51, on right: 5 11 17 22


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PROGRAM . ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: PROGRAM ID . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: PROGRAM ID '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 6

    identifier_list  go to state 7


State 6

    2 identifier_list: ID .

    $default  reduce using rule 2 (identifier_list)


State 7

    1 program: PROGRAM ID '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.'
    3 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 8
    ','  shift, and go to state 9


State 8

    1 program: PROGRAM ID '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 10


State 9

    3 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 11


State 10

    1 program: PROGRAM ID '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 51 (empty)

    declarations  go to state 12
    empty         go to state 13


State 11

    3 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 3 (identifier_list)


State 12

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.'
    4 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 14

    $default  reduce using rule 51 (empty)

    subprogram_declarations  go to state 15
    empty                    go to state 16


State 13

    5 declarations: empty .

    $default  reduce using rule 5 (declarations)


State 14

    4 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 6

    identifier_list  go to state 17


State 15

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.'
   10 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    FUNCTION   shift, and go to state 18
    PROCEDURE  shift, and go to state 19
    BEGIN      shift, and go to state 20

    subprogram_declaration  go to state 21
    subprogram_head         go to state 22
    compound_statement      go to state 23


State 16

   11 subprogram_declarations: empty .

    $default  reduce using rule 11 (subprogram_declarations)


State 17

    3 identifier_list: identifier_list . ',' ID
    4 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 9
    ':'  shift, and go to state 24


State 18

   13 subprogram_head: FUNCTION . ID arguments ':' standard_type ';'

    ID  shift, and go to state 25


State 19

   14 subprogram_head: PROCEDURE . ID arguments ';'

    ID  shift, and go to state 26


State 20

   20 compound_statement: BEGIN . optional_statements END

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    $default  reduce using rule 51 (empty)

    compound_statement   go to state 31
    optional_statements  go to state 32
    statement_list       go to state 33
    statement            go to state 34
    variable             go to state 35
    procedure_statement  go to state 36
    empty                go to state 37


State 21

   10 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 38


State 22

   12 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 51 (empty)

    declarations  go to state 39
    empty         go to state 13


State 23

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 40


State 24

    4 declarations: declarations VAR identifier_list ':' . type ';'

    ARRAY    shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type           go to state 44
    standard_type  go to state 45


State 25

   13 subprogram_head: FUNCTION ID . arguments ':' standard_type ';'

    '('  shift, and go to state 46

    ':'       reduce using rule 15 (arguments)
    ':'       [reduce using rule 51 (empty)]
    $default  reduce using rule 15 (arguments)

    arguments  go to state 47
    empty      go to state 48


State 26

   14 subprogram_head: PROCEDURE ID . arguments ';'

    '('  shift, and go to state 46

    ';'       reduce using rule 15 (arguments)
    ';'       [reduce using rule 51 (empty)]
    $default  reduce using rule 15 (arguments)

    arguments  go to state 49
    empty      go to state 48


State 27

   28 statement: IF . expression THEN statement ELSE statement

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 56
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 28

   29 statement: WHILE . expression DO statement

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 60
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 29

   30 statement: FOR . variable ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 61

    variable  go to state 62


State 30

   31 variable: ID .
   32         | ID . '[' expression ']'
   33 procedure_statement: ID .
   34                    | ID . '(' expression_list ')'

    '('  shift, and go to state 63
    '['  shift, and go to state 64

    ASSIGNOP  reduce using rule 31 (variable)
    $default  reduce using rule 33 (procedure_statement)


State 31

   27 statement: compound_statement .

    $default  reduce using rule 27 (statement)


State 32

   20 compound_statement: BEGIN optional_statements . END

    END  shift, and go to state 65


State 33

   21 optional_statements: statement_list .
   24 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 66

    $default  reduce using rule 21 (optional_statements)


State 34

   23 statement_list: statement .

    $default  reduce using rule 23 (statement_list)


State 35

   25 statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 67


State 36

   26 statement: procedure_statement .

    $default  reduce using rule 26 (statement)


State 37

   22 optional_statements: empty .

    $default  reduce using rule 22 (optional_statements)


State 38

   10 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 10 (subprogram_declarations)


State 39

    4 declarations: declarations . VAR identifier_list ':' type ';'
   12 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 14

    $default  reduce using rule 51 (empty)

    subprogram_declarations  go to state 68
    empty                    go to state 16


State 40

    1 program: PROGRAM ID '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 1 (program)


State 41

    7 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 69


State 42

    8 standard_type: INTEGER .

    $default  reduce using rule 8 (standard_type)


State 43

    9 standard_type: REAL .

    $default  reduce using rule 9 (standard_type)


State 44

    4 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 70


State 45

    6 type: standard_type .

    $default  reduce using rule 6 (type)


State 46

   16 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 6

    identifier_list  go to state 71
    parameter_list   go to state 72


State 47

   13 subprogram_head: FUNCTION ID arguments . ':' standard_type ';'

    ':'  shift, and go to state 73


State 48

   17 arguments: empty .

    $default  reduce using rule 17 (arguments)


State 49

   14 subprogram_head: PROCEDURE ID arguments . ';'

    ';'  shift, and go to state 74


State 50

   40 simple_expression: ADDOP . term

    NOT   shift, and go to state 51
    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    '('   shift, and go to state 55

    term    go to state 75
    factor  go to state 59


State 51

   50 factor: NOT . factor

    NOT   shift, and go to state 51
    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    '('   shift, and go to state 55

    factor  go to state 76


State 52

   44 factor: ID .
   45       | ID . '(' expression_list ')'
   46       | ID . '[' expression ']'

    '('  shift, and go to state 77
    '['  shift, and go to state 78

    $default  reduce using rule 44 (factor)


State 53

   47 factor: INUM .

    $default  reduce using rule 47 (factor)


State 54

   48 factor: RNUM .

    $default  reduce using rule 48 (factor)


State 55

   49 factor: '(' . expression ')'

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 79
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 56

   28 statement: IF expression . THEN statement ELSE statement

    THEN  shift, and go to state 80


State 57

   37 expression: simple_expression .
   38           | simple_expression . RELOP simple_expression
   41 simple_expression: simple_expression . ADDOP term

    RELOP  shift, and go to state 81
    ADDOP  shift, and go to state 82

    $default  reduce using rule 37 (expression)


State 58

   39 simple_expression: term .
   43 term: term . MULOP factor

    MULOP  shift, and go to state 83

    $default  reduce using rule 39 (simple_expression)


State 59

   42 term: factor .

    $default  reduce using rule 42 (term)


State 60

   29 statement: WHILE expression . DO statement

    DO  shift, and go to state 84


State 61

   31 variable: ID .
   32         | ID . '[' expression ']'

    '['  shift, and go to state 64

    $default  reduce using rule 31 (variable)


State 62

   30 statement: FOR variable . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 85


State 63

   34 procedure_statement: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression_list    go to state 86
    expression         go to state 87
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 64

   32 variable: ID '[' . expression ']'

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 88
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 65

   20 compound_statement: BEGIN optional_statements END .

    $default  reduce using rule 20 (compound_statement)


State 66

   24 statement_list: statement_list ';' . statement

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 89
    variable             go to state 35
    procedure_statement  go to state 36


State 67

   25 statement: variable ASSIGNOP . expression

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 90
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 68

   10 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   12 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    FUNCTION   shift, and go to state 18
    PROCEDURE  shift, and go to state 19
    BEGIN      shift, and go to state 20

    subprogram_declaration  go to state 21
    subprogram_head         go to state 22
    compound_statement      go to state 91


State 69

    7 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 92


State 70

    4 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 4 (declarations)


State 71

    3 identifier_list: identifier_list . ',' ID
   18 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 93


State 72

   16 arguments: '(' parameter_list . ')'
   19 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 94
    ';'  shift, and go to state 95


State 73

   13 subprogram_head: FUNCTION ID arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    standard_type  go to state 96


State 74

   14 subprogram_head: PROCEDURE ID arguments ';' .

    $default  reduce using rule 14 (subprogram_head)


State 75

   40 simple_expression: ADDOP term .
   43 term: term . MULOP factor

    MULOP  shift, and go to state 83

    $default  reduce using rule 40 (simple_expression)


State 76

   50 factor: NOT factor .

    $default  reduce using rule 50 (factor)


State 77

   45 factor: ID '(' . expression_list ')'

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression_list    go to state 97
    expression         go to state 87
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 78

   46 factor: ID '[' . expression ']'

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 98
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 79

   49 factor: '(' expression . ')'

    ')'  shift, and go to state 99


State 80

   28 statement: IF expression THEN . statement ELSE statement

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 100
    variable             go to state 35
    procedure_statement  go to state 36


State 81

   38 expression: simple_expression RELOP . simple_expression

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    simple_expression  go to state 101
    term               go to state 58
    factor             go to state 59


State 82

   41 simple_expression: simple_expression ADDOP . term

    NOT   shift, and go to state 51
    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    '('   shift, and go to state 55

    term    go to state 102
    factor  go to state 59


State 83

   43 term: term MULOP . factor

    NOT   shift, and go to state 51
    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    '('   shift, and go to state 55

    factor  go to state 103


State 84

   29 statement: WHILE expression DO . statement

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 104
    variable             go to state 35
    procedure_statement  go to state 36


State 85

   30 statement: FOR variable ASSIGNOP . expression TO expression DO statement

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 105
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 86

   34 procedure_statement: ID '(' expression_list . ')'
   36 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


State 87

   35 expression_list: expression .

    $default  reduce using rule 35 (expression_list)


State 88

   32 variable: ID '[' expression . ']'

    ']'  shift, and go to state 108


State 89

   24 statement_list: statement_list ';' statement .

    $default  reduce using rule 24 (statement_list)


State 90

   25 statement: variable ASSIGNOP expression .

    $default  reduce using rule 25 (statement)


State 91

   12 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


State 92

    7 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 109


State 93

   18 parameter_list: identifier_list ':' . type

    ARRAY    shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type           go to state 110
    standard_type  go to state 45


State 94

   16 arguments: '(' parameter_list ')' .

    $default  reduce using rule 16 (arguments)


State 95

   19 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 6

    identifier_list  go to state 111


State 96

   13 subprogram_head: FUNCTION ID arguments ':' standard_type . ';'

    ';'  shift, and go to state 112


State 97

   36 expression_list: expression_list . ',' expression
   45 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 113
    ','  shift, and go to state 107


State 98

   46 factor: ID '[' expression . ']'

    ']'  shift, and go to state 114


State 99

   49 factor: '(' expression ')' .

    $default  reduce using rule 49 (factor)


State 100

   28 statement: IF expression THEN statement . ELSE statement

    ELSE  shift, and go to state 115


State 101

   38 expression: simple_expression RELOP simple_expression .
   41 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 82

    $default  reduce using rule 38 (expression)


State 102

   41 simple_expression: simple_expression ADDOP term .
   43 term: term . MULOP factor

    MULOP  shift, and go to state 83

    $default  reduce using rule 41 (simple_expression)


State 103

   43 term: term MULOP factor .

    $default  reduce using rule 43 (term)


State 104

   29 statement: WHILE expression DO statement .

    $default  reduce using rule 29 (statement)


State 105

   30 statement: FOR variable ASSIGNOP expression . TO expression DO statement

    TO  shift, and go to state 116


State 106

   34 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 34 (procedure_statement)


State 107

   36 expression_list: expression_list ',' . expression

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 117
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 108

   32 variable: ID '[' expression ']' .

    $default  reduce using rule 32 (variable)


State 109

    7 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 118


State 110

   18 parameter_list: identifier_list ':' type .

    $default  reduce using rule 18 (parameter_list)


State 111

    3 identifier_list: identifier_list . ',' ID
   19 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 9
    ':'  shift, and go to state 119


State 112

   13 subprogram_head: FUNCTION ID arguments ':' standard_type ';' .

    $default  reduce using rule 13 (subprogram_head)


State 113

   45 factor: ID '(' expression_list ')' .

    $default  reduce using rule 45 (factor)


State 114

   46 factor: ID '[' expression ']' .

    $default  reduce using rule 46 (factor)


State 115

   28 statement: IF expression THEN statement ELSE . statement

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 120
    variable             go to state 35
    procedure_statement  go to state 36


State 116

   30 statement: FOR variable ASSIGNOP expression TO . expression DO statement

    ADDOP  shift, and go to state 50
    NOT    shift, and go to state 51
    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    '('    shift, and go to state 55

    expression         go to state 121
    simple_expression  go to state 57
    term               go to state 58
    factor             go to state 59


State 117

   36 expression_list: expression_list ',' expression .

    $default  reduce using rule 36 (expression_list)


State 118

    7 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 122


State 119

   19 parameter_list: parameter_list ';' identifier_list ':' . type

    ARRAY    shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type           go to state 123
    standard_type  go to state 45


State 120

   28 statement: IF expression THEN statement ELSE statement .

    $default  reduce using rule 28 (statement)


State 121

   30 statement: FOR variable ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 124


State 122

    7 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 125


State 123

   19 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 19 (parameter_list)


State 124

   30 statement: FOR variable ASSIGNOP expression TO expression DO . statement

    BEGIN  shift, and go to state 20
    IF     shift, and go to state 27
    WHILE  shift, and go to state 28
    FOR    shift, and go to state 29
    ID     shift, and go to state 30

    compound_statement   go to state 31
    statement            go to state 126
    variable             go to state 35
    procedure_statement  go to state 36


State 125

    7 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    standard_type  go to state 127


State 126

   30 statement: FOR variable ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 30 (statement)


State 127

    7 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 7 (type)
